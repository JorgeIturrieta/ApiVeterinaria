openapi: 3.0.0
info:
  title: API Veterinaria
  description: 'Documentación para API Veterinaria'
  contact:
    email: jorge.10.iturrieta@gmail.com
  version: 1.0.0
servers:
- url: localhost
paths:
  /mascotas:
    get:
      tags:
      - Mascotas
      summary: Obtener un listado de las mascotas existentes
      operationId: obtenerMascotas
      responses:
        200:
          description: Operación exitosa
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Mascota'
        500:
          description: Hubo un error al obtener el listado de mascotas
          content: {}
    
    post:
      tags:
      - Mascotas
      summary: Agregar una nueva mascota
      operationId: agregarMascota
      requestBody:
        description: Objeto mascota a ser creado
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Mascota'
        required: true
      responses:
        201:
          description: La mascota fue creada con éxito
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mascota'
        400:
          description: Los datos de la mascota son incorrectos
          content: {}
        500:
          description: Ocurrió un error al crear la mascota
          content: {}
          
  /mascotas/{idMascota}:
    get:
      tags:
      - Mascotas
      summary: "Buscar mascota por Id"
      description: "Devuelve una mascota dado un Id valido"
      operationId: "Obtene"
      parameters:
      - name: "idMascota"
        in: "path"
        description: "ID de la mascota a Mostrar"
        required: true
        schema:
          type: "string"
          format: "UUID"
        example: 378487e0-f262-11e9-8d28-ad0c998fd5b4
      responses:
        200:
          description: "La mascota fue encontrada con exito"
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Mascota'
        400:
          description: "El Id especificado no es correcto"
        404:
          description: "Mascota No encontrada"  
components:
  schemas:
    Mascota:
      required:
      - nombre
      - tipo
      type: object
      properties:
        _id:
          type: integer
        nombre:
          type: string
          example: Pepito
        tipo:
          type: string
          enum: [PERRO, GATO]
          example: PERRO
        esDeRaza:
          type: boolean
          example: doggie
        fechaNacimiento:
          type: string
          format: date
          example: doggie
        # vacunas:
        #   type: array
        #   items:
        #     $ref: './vacuna.yaml'